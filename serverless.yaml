service:
  name: projectIssueTracker
frameworkVersion: '2'
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
plugins: 
  - serverless-webpack
provider:
  name: aws
  runtime: nodejs12.x
  apitGateway:
    minimumCompressionSize: 1024
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    JWKS_URL: https://dev-xmbz3y4p.us.auth0.com/.well-known/jwks.json
    PROJECT_ISSUES_TABLE: Project_Issues-${self:provider.stage}
functions:
  Auth:
    handler: src/lambda/auth/authorizer.handler
  GetProjects:
    handler: src/lambda/http/getProjects.handler
    events:
      - http:
          method: get
          path: projects
          cors: true
          authorizer: Auth
    iamRoleStatements:
      - Effect: Allow
        Action:
            - dynamodb:Query
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.PROJECT_ISSUES_TABLE}
      - Effect: 'Allow'
        Action:
          - 'xray:PutTraceSegments'
          - 'xray:PutTelemetryRecords'
        Resource:
          - '*'
        
resources:
  Resources:
    ProjectIssuesTable: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PROJECT_ISSUES_TABLE}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

        